{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\React\\\\crown-clothing\\\\Crown-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { googleSignInStart, emailSignInStart } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {} catch (error) {\n    yield put(signInFailure);\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(googleSignInStart), call(emailSignInStart)]);\n}","map":{"version":3,"sources":["C:\\Users\\User\\Documents\\Projects\\React\\crown-clothing\\Crown-clothing\\src\\redux\\user\\user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","googleSignInStart","emailSignInStart","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,SACCC,IADD,EAECC,cAFD,EAGCC,yBAHD,EAICC,cAJD,QAKO,+BALP;AAOA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,gBAApD;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAClD,MAAI;AACH,UAAMC,OAAO,GAAG,MAAMb,IAAI,CAACO,yBAAD,EAA4BK,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CACRI,aAAa;AAAGa,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EADL,CAAT;AAGA,GAND,CAME,OAAOC,KAAP,EAAc;AACf,UAAMnB,GAAG,CAACK,aAAa,CAACc,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AAAA,iBACc,MAAMd,IAAI,CAACe,eAAL,CAAqBd,cAArB,CADpB;AAAA,UACKe,IADL,QACKA,IADL;;AAEH,UAAMV,uBAAuB,CAACU,IAAD,CAA7B;AACA,GAHD,CAGE,OAAOH,KAAP,EAAc;AACf,UAAMnB,GAAG,CAACK,aAAa,CAACc,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUI,mBAAV,GAAgC;AACtC,QAAMxB,UAAU,CAACI,eAAe,CAACqB,oBAAjB,EAAuCJ,gBAAvC,CAAhB;AACA;AAED,OAAO,UAAUK,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAClE,MAAI;AAAA,kBACc,MAAMtB,IAAI,CAACuB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADpB;AAAA,UACKN,IADL,SACKA,IADL;;AAEH,UAAMV,uBAAuB,CAACU,IAAD,CAA7B;AACA,GAHD,CAGE,OAAOH,KAAP,EAAc;AACf,UAAMnB,GAAG,CAACK,aAAa,CAACc,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUW,kBAAV,GAA+B;AACrC,QAAM/B,UAAU,CAACI,eAAe,CAAC4B,mBAAjB,EAAsCN,eAAtC,CAAhB;AACA;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACtC,MAAI,CACH,CADD,CACE,OAAOb,KAAP,EAAc;AACf,UAAMnB,GAAG,CAACK,aAAD,CAAT;AACA;AACD;AAED,OAAO,UAAU4B,kBAAV,GAA+B;AACrC,QAAMlC,UAAU,CAACI,eAAe,CAAC+B,kBAAjB,EAAqCF,mBAArC,CAAhB;AACA;AAED,OAAO,UAAUG,SAAV,GAAsB;AAC5B,QAAMjC,GAAG,CAAC,CAACD,IAAI,CAACS,iBAAD,CAAL,EAA0BT,IAAI,CAACU,gBAAD,CAA9B,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { signInSuccess, signInFailure } from './user.actions';\r\n\r\nimport {\r\n\tauth,\r\n\tgoogleProvider,\r\n\tcreateUserProfileDocument,\r\n\tgetCurrentUser\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport { googleSignInStart, emailSignInStart } from './user.actions';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n\ttry {\r\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\r\n\t\tconst userSnapshot = yield userRef.get();\r\n\t\tyield put(\r\n\t\t\tsignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n\t\t);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\r\n\t\tyield getSnapshotFromUserAuth(user);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n\ttry {\r\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n\t\tyield getSnapshotFromUserAuth(user);\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure(error));\r\n\t}\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n\ttry {\r\n\t} catch (error) {\r\n\t\tyield put(signInFailure);\r\n\t}\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n\tyield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* userSagas() {\r\n\tyield all([call(googleSignInStart), call(emailSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}