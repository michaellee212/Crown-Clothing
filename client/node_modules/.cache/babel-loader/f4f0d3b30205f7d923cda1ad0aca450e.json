{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:\\Users\\User\\Documents\\Projects\\React\\crown-clothing\\Crown-clothing\\src\\redux\\shop\\shop.sagas.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,SACCC,uBADD,EAECC,uBAFD,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,MAAI;AACH,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAChCG,+BADgC,EAEhCO,QAFgC,CAAjC;AAIA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACA,GARD,CAQE,OAAOC,KAAP,EAAc;AACf,UAAMZ,GAAG,CAACG,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMhB,UAAU,CACfO,eAAe,CAACU,uBADD,EAEfT,qBAFe,CAAhB;AAIA","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n\tfirestore,\r\n\tconvertCollectionsSnapshotToMap\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n\tfetchCollectionsFailure,\r\n\tfetchCollectionsSuccess\r\n} from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n\ttry {\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\t\tconst snapshot = yield collectionRef.get();\r\n\t\tconst collectionsMap = yield call(\r\n\t\t\tconvertCollectionsSnapshotToMap,\r\n\t\t\tsnapshot\r\n\t\t);\r\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\r\n\t} catch (error) {\r\n\t\tyield put(fetchCollectionsFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n\tyield takeLatest(\r\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\r\n\t\tfetchCollectionsAsync\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}