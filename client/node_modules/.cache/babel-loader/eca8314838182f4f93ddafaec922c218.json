{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\React\\\\crown-clothing\\\\Crown-clothing\\\\client\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions.js';\nimport { CartDropdownContainer, CartDropdownButton, EmptyMessageContainer, CartItemsContainer } from './cart-dropdown.styles';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(CartDropdownContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(CartItemsContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n})) : React.createElement(EmptyMessageContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CartDropdownButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["C:\\Users\\User\\Documents\\Projects\\React\\crown-clothing\\Crown-clothing\\client\\src\\components\\cart-dropdown\\cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CartItem","selectCartItems","toggleCartHidden","CartDropdownContainer","CartDropdownButton","EmptyMessageContainer","CartItemsContainer","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AAEA,SACCC,qBADD,EAECC,kBAFD,EAGCC,qBAHD,EAICC,kBAJD,QAKO,wBALP;;AAOA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACpB,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACEF,SAAS,CAACG,MAAV,GACAH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IACrB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADA,GAKA,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,CADD,EAYC,oBAAC,kBAAD;AACC,EAAA,OAAO,EAAE,MAAM;AACdJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AACA,GAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZD,CADD;;AAwBA,MAAMc,eAAe,GAAGlB,wBAAwB,CAAC;AAChDU,EAAAA,SAAS,EAAEP;AADqC,CAAD,CAAhD;AAIA,eAAeF,UAAU,CAACF,OAAO,CAACmB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport CartItem from '../cart-item/cart-item.component';\r\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\r\nimport { toggleCartHidden } from '../../redux/cart/cart.actions.js';\r\n\r\nimport {\r\n\tCartDropdownContainer,\r\n\tCartDropdownButton,\r\n\tEmptyMessageContainer,\r\n\tCartItemsContainer\r\n} from './cart-dropdown.styles';\r\n\r\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\r\n\t<CartDropdownContainer>\r\n\t\t<CartItemsContainer>\r\n\t\t\t{cartItems.length ? (\r\n\t\t\t\tcartItems.map(cartItem => (\r\n\t\t\t\t\t<CartItem key={cartItem.id} item={cartItem} />\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<EmptyMessageContainer>\r\n\t\t\t\t\tYour cart is empty\r\n\t\t\t\t</EmptyMessageContainer>\r\n\t\t\t)}\r\n\t\t</CartItemsContainer>\r\n\t\t<CartDropdownButton\r\n\t\t\tonClick={() => {\r\n\t\t\t\thistory.push('/checkout');\r\n\t\t\t\tdispatch(toggleCartHidden());\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\tGO TO CHECKOUT\r\n\t\t</CartDropdownButton>\r\n\t</CartDropdownContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tcartItems: selectCartItems\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\r\n"]},"metadata":{},"sourceType":"module"}