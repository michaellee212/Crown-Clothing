{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('i am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {} // collectionRef\n  // \t.get()\n  // \t.then(snapshot => {\n  // \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  // \t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n  // \t})\n  // \t.catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:\\Users\\User\\Documents\\Projects\\React\\crown-clothing\\Crown-clothing\\src\\redux\\shop\\shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,SACCC,uBADD,EAECC,uBAFD,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACH,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAChCG,+BADgC,EAEhCS,QAFgC,CAAjC;AAIA,UAAMX,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACA,GARD,CAQE,OAAOC,KAAP,EAAc,CAAE,CAXsB,CAYxC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMjB,SAAS,CACdO,eAAe,CAACW,uBADF,EAEdV,qBAFc,CAAf;AAIA","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n\tfirestore,\r\n\tconvertCollectionsSnapshotToMap\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n\tfetchCollectionsFailure,\r\n\tfetchCollectionsSuccess\r\n} from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n\tyield console.log('i am fired');\r\n\r\n\ttry {\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\t\tconst snapshot = yield collectionRef.get();\r\n\t\tconst collectionsMap = yield call(\r\n\t\t\tconvertCollectionsSnapshotToMap,\r\n\t\t\tsnapshot\r\n\t\t);\r\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\r\n\t} catch (error) {}\r\n\t// collectionRef\r\n\t// \t.get()\r\n\t// \t.then(snapshot => {\r\n\t// \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t// \t\tdispatch(fetchCollectionsSuccess(collectionsMap));\r\n\t// \t})\r\n\t// \t.catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n\tyield takeEvery(\r\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\r\n\t\tfetchCollectionsAsync\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}