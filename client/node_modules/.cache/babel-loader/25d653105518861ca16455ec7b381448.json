{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\React\\\\crown-clothing\\\\Crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\User\\Documents\\Projects\\React\\crown-clothing\\Crown-clothing\\src\\pages\\shop\\shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;;AAEA,MAAMO,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACPC,MAAAA,OAAO,EAAE;AADF,KAD8B;AAAA,SAKtCC,uBALsC,GAKZ,IALY;AAAA;;AAOtCC,EAAAA,iBAAiB,GAAG;AAAA,UACXR,iBADW,GACW,KAAKS,KADhB,CACXT,iBADW;AAEnB,UAAMU,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAC9B,MAAMC,QAAN,IAAkB;AACjB,YAAMC,cAAc,GAAGf,+BAA+B,CACrDc,QADqD,CAAtD;AAGAb,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,KAP6B,CAA/B;AASA;;AAEDU,EAAAA,MAAM,GAAG;AAAA,UACAC,KADA,GACU,KAAKR,KADf,CACAQ,KADA;AAER,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACC,MAAA,KAAK,MADN;AAEC,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAFL;AAGC,MAAA,SAAS,EAAEtB,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAMC,oBAAC,KAAD;AACC,MAAA,IAAI,YAAKqB,KAAK,CAACC,IAAX,mBADL;AAEC,MAAA,SAAS,EAAErB,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADD;AAaA;;AArCqC;;AAwCvC,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAK;AACvCpB,EAAAA,iBAAiB,EAAEc,cAAc,IAChCM,QAAQ,CAACpB,iBAAiB,CAACc,cAAD,CAAlB;AAF8B,CAAL,CAAnC;;AAKA,eAAenB,OAAO,CACrB,IADqB,EAErBwB,kBAFqB,CAAP,CAGbhB,QAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nimport {\r\n\tfirestore,\r\n\tconvertCollectionsSnapshotToMap\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\n\r\nclass ShopPage extends React.Component {\r\n\tstate = {\r\n\t\tloading: true\r\n\t};\r\n\r\n\tunsubscribeFromSnapshot = null;\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { updateCollections } = this.props;\r\n\t\tconst collectionRef = firestore.collection('collections');\r\n\r\n\t\tthis.unsubscribeFromSnapshot = collectionRef.onSnapshot(\r\n\t\t\tasync snapshot => {\r\n\t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(\r\n\t\t\t\t\tsnapshot\r\n\t\t\t\t);\r\n\t\t\t\tupdateCollections(collectionsMap);\r\n\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { match } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className='shop-page'>\r\n\t\t\t\t<Route\r\n\t\t\t\t\texact\r\n\t\t\t\t\tpath={`${match.path}`}\r\n\t\t\t\t\tcomponent={CollectionsOverview}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\r\n\t\t\t\t\tcomponent={CollectionPage}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateCollections: collectionsMap =>\r\n\t\tdispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(\r\n\tnull,\r\n\tmapDispatchToProps\r\n)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}