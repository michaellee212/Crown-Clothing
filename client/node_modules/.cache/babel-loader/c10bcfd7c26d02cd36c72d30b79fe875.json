{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Michael\\\\Documents\\\\crown-clothing\\\\Crown-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\Michael\\\\Documents\\\\crown-clothing\\\\Crown-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\crown-clothing\\\\Crown-clothing\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(SignInTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: email,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(ButtonsBarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \" Sign in \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:\\Users\\Michael\\Documents\\crown-clothing\\Crown-clothing\\client\\src\\components\\sign-in\\sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {\r\n\tgoogleSignInStart,\r\n\temailSignInStart\r\n} from '../../redux/user/user.actions';\r\n\r\nimport {\r\n\tSignInContainer,\r\n\tSignInTitle,\r\n\tButtonsBarContainer\r\n} from './sign-in.styles';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n\tconst [userCredentials, setCredentials] = useState({\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t});\r\n\r\n\tconst { email, password } = userCredentials;\r\n\tconst handleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\temailSignInStart(email, password);\r\n\t};\r\n\r\n\tconst handleChange = event => {\r\n\t\tconst { value, name } = event.target;\r\n\r\n\t\tsetCredentials({ ...userCredentials, [name]: value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SignInContainer>\r\n\t\t\t<SignInTitle>I already have an account</SignInTitle>\r\n\t\t\t<span>Sign in with your email and password</span>\r\n\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tlabel='email'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\tlabel='password'\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<ButtonsBarContainer>\r\n\t\t\t\t\t<CustomButton type='submit'> Sign in </CustomButton>\r\n\t\t\t\t\t<CustomButton\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={googleSignInStart}\r\n\t\t\t\t\t\tisGoogleSignIn\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSign in with Google\r\n\t\t\t\t\t</CustomButton>\r\n\t\t\t\t</ButtonsBarContainer>\r\n\t\t\t</form>\r\n\t\t</SignInContainer>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\r\n\temailSignInStart: (email, password) =>\r\n\t\tdispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(\r\n\tnull,\r\n\tmapDispatchToProps\r\n)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}