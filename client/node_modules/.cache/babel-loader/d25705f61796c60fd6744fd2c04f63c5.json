{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('i am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:\\Users\\User\\Documents\\Projects\\React\\crown-clothing\\Crown-clothing\\src\\redux\\shop\\shop.sagas.js"],"names":["takeEvery","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAEAF,EAAAA,aAAa,CACXG,GADF,GAEEC,IAFF,CAEOC,QAAQ,IAAI;AACjB,UAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD;AACAG,IAAAA,QAAQ,CAACC,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACA,GALF,EAMEI,KANF,CAMQC,KAAK,IAAIH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CANzB;AAOA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMnB,SAAS,CACdC,eAAe,CAACmB,uBADF,EAEdlB,qBAFc,CAAf;AAIA","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n\tyield console.log('i am fired');\r\n\r\n\tconst collectionRef = firestore.collection('collections');\r\n\r\n\tcollectionRef\r\n\t\t.get()\r\n\t\t.then(snapshot => {\r\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\r\n\t\t})\r\n\t\t.catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n\tyield takeEvery(\r\n\t\tShopActionTypes.FETCH_COLLECTIONS_START,\r\n\t\tfetchCollectionsAsync\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}